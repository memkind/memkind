.\" Automatically generated by Pandoc 2.5
.\"
.TH "MEMKIND_HUGETLB" "3" "2022-08-10" "MEMKIND_HUGETLB ver. 1.14.0+dev6+gcd4375cb" "MEMKIND_HUGETLB | MEMKIND Programmer's Manual"
.hy
.\" SPDX-License-Identifier: BSD-2-Clause
.\" Copyright 2022, Intel Corporation
.SH NAME
.PP
\f[B]memkind_hugetlb\f[R] \- hugetlb memory memkind operations.
.PP
\f[B]Note:\f[R] This is EXPERIMENTAL API.
The functionality and the header file itself can be changed (including
non\-backward compatible changes) or removed.
.SH SYNOPSIS
.IP
.nf
\f[C]
int memkind_hugetlb_check_available_2mb(struct memkind *kind);
int memkind_hugetlb_get_mmap_flags(struct memkind *kind, int *flags);
void memkind_hugetlb_init_once(void);
\f[R]
.fi
.SH DESCRIPTION
.PP
The hugetlb memory memkind operations enable memory kinds which use the
Linux hugetlbfs file system.
For more information about the hugetlbfs see link below.
.PD 0
.P
.PD
\[la]https://www.kernel.org/doc/Documentation/vm/hugetlbpage.txt\[ra]
.TP
.B \f[C]memkind_hugetlb_check_available_2mb()\f[R]
check if there are 2MB pages reserved in the default hugetlbfs.
If the kind implements \f[C]ops.get_mbind_nodemask()\f[R], then only the
\f[I]NUMA\f[R] nodes set by the nodemask are checked, otherwise every
\f[I]NUMA\f[R] node is checked.
.TP
.B \f[C]memkind_hugetlb_get_mmap_flags()\f[R]
sets the flags for the \f[B]mmap\f[R]() system call such that the
hugetlbfs is utilized for allocations.
.TP
.B \f[C]memkind_hugetlb_init_once()\f[R]
this function initializes \f[B]MEMKIND_HUGETLB\f[R] kind and it should
not be called more than once.
Note: \f[C]memkind_hugetlb_init_once()\f[R] may reserve some extra
memory.
.SS COPYRIGHT
.PP
Copyright (C) 2014 \- 2022 Intel Corporation.
All rights reserved.
.SS SEE ALSO
.PP
\f[B]memkind\f[R](3), \f[B]memkind_arena\f[R](3),
\f[B]memkind_default\f[R](3), \f[B]memkind_hbw\f[R](3),
\f[B]memkind_pmem\f[R](3), \f[B]jemalloc\f[R](3), \f[B]mbind\f[R](2),
\f[B]mmap\f[R](2)
