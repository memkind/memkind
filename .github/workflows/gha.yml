name: MEMKIND
on: [push, pull_request]

jobs:

  linting:
    runs-on: ubuntu-20.04
    name: Code Linting - clang-format
    steps:

    - name: Install clang-format
      run: sudo apt install clang-format-10

    - name: Checkout
      uses: actions/checkout@v2

    - name: Run clang-format
      run: ./clang-format.sh

  building:
    runs-on: ${{ matrix.os }}
    name: Building memkind daxctl ${{ matrix.daxctl }} | hwloc ${{ matrix.hwloc }} | ${{ matrix.os }} | ${{ matrix.env.cc }}-${{ matrix.compiler_version }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        compiler_version: [10]
        env:
          - { cc: gcc, cxx: g++}
          - { cc: clang, cxx: clang++}
        daxctl: [false, true]
        hwloc: [false, true]
    env:
        CC: ${{ matrix.env.cc }}-${{ matrix.compiler_version }}
        CXX: ${{ matrix.env.cxx }}-${{ matrix.compiler_version }}
        CCACHE_COMPRESS: 1
        CCACHE_TEMPDIR: /tmp/.ccache-temp
        CC_BUILD_ID: ${{ matrix.os }}-${{ matrix.env.cc }}-${{ matrix.compiler_version }}-d${{ matrix.daxctl }}-h${{ matrix.hwloc }}
    steps:

    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Ccache setup
      uses: actions/cache@v2.1.3
      with:
        path: ~/.ccache
        key: ccache-${{ env.CC_BUILD_ID }}-static-build-${{ github.sha }}
        restore-keys: ccache-${{ env.CC_BUILD_ID }}-static-build-

    - name: Install basic dependencies
      run: sudo apt install autoconf ccache libnuma-dev

    - name: Install daxctl dependency
      run: |
          if [ "${{ matrix.daxctl }}" == true ]; then
              sudo apt install libdaxctl-dev
          else
            echo "Skipping daxctl installation"
          fi

    - name: Install hwloc dependency
      run: |
          if [ "${{ matrix.hwloc }}" == true ]; then
            ./utils/docker/docker_install_hwloc.sh
          else
            echo "Skipping hwloc installation"
          fi

    - name: Build memkind
      run: |
          ccache --max-size=150M
          ./build.sh
